<div 
    x-data="{
        videoUrl: '',
        showResults: false,
        showError: false,
        errorMessage: '',
        videoId: null,
        isLoading: false,
        thumbnailOptions: [
            { 
                name: 'Ultra HD', 
                urlSuffix: 'maxresdefault.jpg',
                size: '1920×1080',
                quality: 'Best',
                description: 'Best quality for printing',
                color: 'from-purple-500 to-pink-500'
            },
            { 
                name: 'Standard', 
                urlSuffix: 'sddefault.jpg',
                size: '640×480',
                quality: 'High',
                description: 'Standard quality, versatile choice',
                color: 'from-blue-500 to-cyan-500'
            },
            { 
                name: 'High Quality', 
                urlSuffix: 'hqdefault.jpg',
                size: '480×360',
                quality: 'Good',
                description: 'High quality for web use',
                color: 'from-green-500 to-emerald-500'
            },
            { 
                name: 'Medium', 
                urlSuffix: 'mqdefault.jpg',
                size: '320×180',
                quality: 'Medium',
                description: 'Medium quality, fast loading',
                color: 'from-orange-500 to-red-500'
            }
        ],
        extractVideoId(url) {
            const patterns = [
                /(?:youtube\.com\/watch\?v=|youtu\.be\/|youtube\.com\/embed\/)([^&\n?#]+)/,
                /youtube\.com\/watch\?.*v=([^&\n?#]+)/
            ];
            
            for (let pattern of patterns) {
                const match = url.match(pattern);
                if (match) return match[1];
            }
            return null;
        },
        showErrorMessage(message) {
            this.errorMessage = message;
            this.showError = true;
            
            setTimeout(() => {
                this.showError = false;
            }, 5000);
        },
        extractThumbnails() {
            const url = this.videoUrl.trim();
            
            if (!url) {
                this.showErrorMessage('Please enter a YouTube video URL');
                return;
            }
            
            const videoId = this.extractVideoId(url);
            if (!videoId) {
                this.showErrorMessage('Please enter a valid YouTube video URL');
                return;
            }
            
            this.isLoading = true;
            this.showError = false;
            
            setTimeout(() => {
                this.videoId = videoId;
                this.showResults = true;
                this.isLoading = false;
                
                this.$nextTick(() => {
                    const element = document.getElementById('results');
                    if (element) {
                        element.scrollIntoView({ behavior: 'smooth' });
                    }
                });
            }, 1000);
        },
        downloadThumbnail(urlSuffix, optionName) {
            const url = `https://img.youtube.com/vi/${this.videoId}/${urlSuffix}`;
            const filename = `${this.videoId}_${optionName.replace(/\s+/g, '_')}.jpg`;
            
            const link = document.createElement('a');
            link.href = url;
            link.download = filename;
            link.target = '_blank';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        },
        copyToClipboard(text) {
            navigator.clipboard.writeText(text);
            this.$dispatch('notify', {
                type: 'success',
                message: 'URL copied to clipboard!'
            });
        }
    }"
    class="min-h-screen bg-gradient-to-br from-purple-50 via-pink-50 to-blue-50"
>
    <!-- Hero Section -->
    <div class="relative overflow-hidden bg-gradient-to-r from-purple-600 via-pink-500 to-blue-500">
        <div class="absolute inset-0 bg-black/10"></div>
        <div class="relative container mx-auto px-4 py-16">
            <div class="text-center text-white">
                <div class="inline-flex items-center justify-center w-20 h-20 bg-white/20 rounded-3xl mb-6 backdrop-blur-sm">
                    <Lucideicons.play class="w-10 h-10" />
                </div>
                <h1 class="text-5xl md:text-6xl font-bold mb-4 leading-tight">
                    YouTube Thumbnail
                    <span class="block bg-gradient-to-r from-yellow-300 to-orange-300 bg-clip-text text-transparent">
                        Grabber
                    </span>
                </h1>
                <p class="text-xl md:text-2xl mb-8 opacity-90 max-w-2xl mx-auto">
                    Extract high-quality thumbnails instantly. Multiple resolutions. Completely free!
                </p>
                
                <!-- Main Input Card -->
                <div class="max-w-2xl mx-auto">
                    <div class="bg-white/95 backdrop-blur-sm rounded-3xl p-8 shadow-2xl hover:shadow-3xl transition-all duration-500">
                        <div class="flex items-center gap-3 mb-6">
                            <div class="p-2 bg-purple-100 rounded-xl">
                                <Lucideicons.link class="w-5 h-5 text-purple-600" />
                            </div>
                            <span class="text-lg font-semibold text-gray-800">Enter YouTube Video URL</span>
                        </div>
                        
                        <div class="flex flex-col sm:flex-row gap-4">
                            <input 
                                type="text" 
                                x-model="videoUrl"
                                @keyup.enter="extractThumbnails()"
                                @focus="$el.classList.add('ring-4', 'ring-purple-200')"
                                @blur="$el.classList.remove('ring-4', 'ring-purple-200')"
                                placeholder="Paste YouTube video URL here..."
                                class="flex-1 px-5 py-3.5 rounded-xl border-2 border-gray-200 focus:border-purple-500 focus:outline-none text-base transition-all duration-300 bg-gray-50 focus:bg-white hover:border-gray-300"
                            />
                            <button 
                                class="group px-6 py-3.5 bg-gradient-to-r from-purple-500 to-pink-500 text-white font-semibold rounded-xl hover:shadow-xl transform hover:scale-[1.02] active:scale-[0.98] transition-all duration-200 flex items-center gap-2 justify-center whitespace-nowrap overflow-hidden relative"
                                @click="extractThumbnails()" 
                                x-bind:disabled="isLoading"
                                x-bind:class="isLoading ? 'opacity-75 cursor-not-allowed' : ''"
                            >
                                <div class="absolute inset-0 bg-gradient-to-r from-purple-600 to-pink-600 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                                <span x-show="!isLoading" class="flex items-center gap-2 relative z-10">
                                    <Lucideicons.search class="w-4 h-4" />
                                    Extract
                                </span>
                                <span x-show="isLoading" class="flex items-center gap-2 relative z-10">
                                    <Lucideicons.loader class="w-4 h-4 animate-spin" />
                                    Processing...
                                </span>
                            </button>
                        </div>
                        
                                                 <!-- Error Alert -->
                        <div 
                            x-show="showError" 
                            x-transition:enter="transition ease-out duration-300 transform"
                            x-transition:enter-start="opacity-0 scale-95 translate-y-2"
                            x-transition:enter-end="opacity-100 scale-100 translate-y-0"
                            x-transition:leave="transition ease-in duration-200 transform"
                            x-transition:leave-start="opacity-100 scale-100 translate-y-0"
                            x-transition:leave-end="opacity-0 scale-95 translate-y-2"
                            class="mt-6 p-4 bg-red-50 border border-red-200 rounded-xl flex items-center gap-3 shadow-sm"
                        >
                            <div class="flex-shrink-0 w-8 h-8 bg-red-100 rounded-full flex items-center justify-center">
                                <Lucideicons.triangle_alert class="w-4 h-4 text-red-600" />
                            </div>
                            <span x-text="errorMessage" class="text-red-700 font-medium text-sm"></span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Decorative Elements -->
        <div class="absolute top-20 left-10 w-20 h-20 bg-yellow-300/20 rounded-full blur-xl"></div>
        <div class="absolute bottom-20 right-10 w-32 h-32 bg-pink-300/20 rounded-full blur-xl"></div>
    </div>

    <!-- Results Section -->
    <div 
        x-show="showResults" 
        x-transition:enter="transition ease-out duration-500"
        x-transition:enter-start="opacity-0 transform translate-y-8"
        x-transition:enter-end="opacity-100 transform translate-y-0"
        class="container mx-auto px-4 py-16"
        id="results"
    >
        <div class="text-center mb-12">
            <h2 class="text-4xl md:text-5xl font-bold text-gray-800 mb-4">
                <span class="flex items-center justify-center gap-3">
                    <div class="p-3 bg-purple-100 rounded-2xl">
                        <Lucideicons.image class="w-8 h-8 text-purple-600" />
                    </div>
                    Available Thumbnails
                </span>
            </h2>
            <p class="text-lg text-gray-600">Choose your preferred resolution and download or copy the URL</p>
        </div>

        <!-- Thumbnails Grid -->
        <div class="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-8">
                         <template x-for="option in thumbnailOptions" x-bind:key="option.name">
                <div 
                    class="group bg-white rounded-2xl shadow-lg overflow-hidden hover:shadow-xl transform hover:scale-[1.02] transition-all duration-300 border border-gray-100"
                    x-show="videoId"
                    x-transition:enter="transition ease-out duration-500 transform"
                    x-transition:enter-start="opacity-0 scale-95 translate-y-4"
                    x-transition:enter-end="opacity-100 scale-100 translate-y-0"
                >
                    <!-- Preview -->
                    <div class="relative overflow-hidden">
                        <img 
                            x-bind:src="`https://img.youtube.com/vi/${videoId}/${option.urlSuffix}`"
                            x-bind:alt="option.name"
                            class="w-full aspect-video object-cover group-hover:scale-105 transition-transform duration-500"
                            @error="$el.src = `https://img.youtube.com/vi/${videoId}/hqdefault.jpg`"
                        />
                        <!-- Quality Badge -->
                        <div class="absolute top-3 right-3">
                            <div 
                                class="px-2.5 py-1 rounded-lg text-white font-semibold text-xs bg-gradient-to-r shadow-lg backdrop-blur-sm" 
                                x-bind:class="option.color"
                                x-text="option.quality"
                            >
                            </div>
                        </div>
                        <!-- Overlay on hover -->
                        <div class="absolute inset-0 bg-black/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                    </div>

                    <div class="p-5">
                        <!-- Title and Info -->
                        <div class="mb-4">
                            <h3 class="text-lg font-bold text-gray-800 mb-1" x-text="option.name"></h3>
                            <p class="text-gray-600 text-sm mb-3" x-text="option.description"></p>
                            <div class="inline-flex items-center px-2.5 py-1 bg-gray-50 rounded-lg text-xs font-medium text-gray-700">
                                <Lucideicons.monitor class="w-3.5 h-3.5 mr-1.5" />
                                <span x-text="option.size"></span>
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="flex flex-col gap-2">
                            <button 
                                class="group/btn w-full flex items-center justify-center gap-2 px-4 py-2.5 bg-gradient-to-r from-blue-500 to-cyan-500 text-white font-semibold rounded-lg hover:shadow-lg transform hover:scale-[1.02] active:scale-[0.98] transition-all duration-200 text-sm relative overflow-hidden"
                                @click="downloadThumbnail(option.urlSuffix, option.name)"
                            >
                                <div class="absolute inset-0 bg-gradient-to-r from-blue-600 to-cyan-600 opacity-0 group-hover/btn:opacity-100 transition-opacity duration-300"></div>
                                <Lucideicons.download class="w-4 h-4 relative z-10" />
                                <span class="relative z-10">Download</span>
                            </button>
                            <button 
                                class="group/btn w-full flex items-center justify-center gap-2 px-4 py-2.5 bg-white border border-gray-200 text-gray-700 font-semibold rounded-lg hover:border-purple-300 hover:text-purple-600 hover:bg-purple-50 transition-all duration-200 text-sm"
                                @click="copyToClipboard(`https://img.youtube.com/vi/${videoId}/${option.urlSuffix}`)"
                            >
                                <Lucideicons.copy class="w-4 h-4" />
                                Copy URL
                            </button>
                        </div>
                    </div>
                </div>
            </template>
        </div>
    </div>

    <!-- Features Section -->
    <div class="bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 py-16">
        <div class="container mx-auto px-4">
            <div class="text-center text-white mb-12">
                <h2 class="text-4xl font-bold mb-4">Why Choose Us?</h2>
                <p class="text-xl opacity-90">Simple, fast, and free thumbnail extraction service</p>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
                <div class="text-center group">
                    <div class="w-16 h-16 bg-white/20 rounded-2xl flex items-center justify-center mx-auto mb-4 group-hover:bg-white/30 transition-all duration-300">
                        <Lucideicons.zap class="w-8 h-8 text-white" />
                    </div>
                    <h3 class="text-xl font-bold text-white mb-2">Lightning Fast</h3>
                    <p class="text-white/80">Extract thumbnails in seconds</p>
                </div>
                
                <div class="text-center group">
                    <div class="w-16 h-16 bg-white/20 rounded-2xl flex items-center justify-center mx-auto mb-4 group-hover:bg-white/30 transition-all duration-300">
                        <Lucideicons.shield_check class="w-8 h-8 text-white" />
                    </div>
                    <h3 class="text-xl font-bold text-white mb-2">Completely Free</h3>
                    <p class="text-white/80">No registration required</p>
                </div>
                
                <div class="text-center group">
                    <div class="w-16 h-16 bg-white/20 rounded-2xl flex items-center justify-center mx-auto mb-4 group-hover:bg-white/30 transition-all duration-300">
                        <Lucideicons.heart class="w-8 h-8 text-white" />
                    </div>
                    <h3 class="text-xl font-bold text-white mb-2">High Quality</h3>
                    <p class="text-white/80">Multiple resolution options</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Toast Notifications -->
    <div 
        x-data="{ 
            notifications: [],
            add(message) {
                const notification = {
                    id: Date.now(),
                    message
                };
                this.notifications.push(notification);
                setTimeout(() => {
                    this.notifications = this.notifications.filter(n => n.id !== notification.id);
                }, 3000);
            }
        }"
        @notify.window="add($event.detail.message)"
        class="fixed top-4 right-4 z-50 space-y-2"
    >
        <template x-for="notification in notifications" x-bind:key="notification.id">
            <div 
                x-transition:enter="transition ease-out duration-300"
                x-transition:enter-start="opacity-0 transform translate-x-full"
                x-transition:enter-end="opacity-100 transform translate-x-0"
                x-transition:leave="transition ease-in duration-200"
                x-transition:leave-start="opacity-100 transform translate-x-0"
                x-transition:leave-end="opacity-0 transform translate-x-full"
                class="flex items-center gap-3 bg-green-500 text-white px-6 py-4 rounded-2xl shadow-lg max-w-sm"
            >
                <Lucideicons.check_check class="w-6 h-6" />
                <span x-text="notification.message" class="font-medium"></span>
            </div>
        </template>
    </div>
</div>
