<!-- YouTube Thumbnail Grabber - Professional Design System -->
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
<style>
    :root {
        /* Refined Color Palette */
        --red: #ff2d55;
        --red-light: #ff6b8a;
        --red-dark: #e60026;
        
        --blue: #007aff;
        --blue-light: #4dabf7;
        --blue-dark: #0051cc;
        
        --purple: #5856d6;
        --purple-light: #8b87ff;
        --purple-dark: #3634a3;
        
        --green: #30d158;
        --green-light: #66eb7a;
        --green-dark: #28a745;
        
        --orange: #ff9500;
        --orange-light: #ffb347;
        --orange-dark: #e6800e;
        
        /* Professional Color Scale */
        --white: #ffffff;
        --gray-50: #fafbfc;
        --gray-100: #f4f6f8;
        --gray-200: #e8ecef;
        --gray-300: #d1d9e0;
        --gray-400: #a2abb7;
        --gray-500: #6c7b8a;
        --gray-550: #62717f;
        --gray-600: #57667a;
        --gray-650: #4e5d70;
        --gray-700: #3d4853;
        --gray-750: #364049;
        --gray-800: #2a3441;
        --gray-850: #233039;
        --gray-900: #1a202c;
        
        /* Enhanced Shadow & Light System */
        --shadow-soft: 0 1px 3px rgba(0, 0, 0, 0.05);
        --shadow-low: 0 4px 12px rgba(0, 0, 0, 0.08);
        --shadow-medium: 0 8px 24px rgba(0, 0, 0, 0.12);
        --shadow-high: 0 16px 48px rgba(0, 0, 0, 0.15);
        --shadow-dramatic: 0 24px 64px rgba(0, 0, 0, 0.20);
        
        /* Light accents */
        --light-top: rgba(255, 255, 255, 0.8);
        --light-subtle: rgba(255, 255, 255, 0.4);
        
        /* Breathing Space System */
        --space-2xs: 0.25rem;    /* 4px */
        --space-xs: 0.5rem;      /* 8px */
        --space-sm: 0.75rem;     /* 12px */
        --space-md: 1rem;        /* 16px */
        --space-lg: 1.5rem;      /* 24px */
        --space-xl: 2rem;        /* 32px */
        --space-2xl: 3rem;       /* 48px */
        --space-3xl: 4rem;       /* 64px */
        --space-4xl: 6rem;       /* 96px */
        --space-5xl: 8rem;       /* 128px */
        --space-6xl: 12rem;      /* 192px */
    }

    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    html {
        font-size: 16px;
        scroll-behavior: smooth;
        -webkit-text-size-adjust: 100%;
    }

    /* 移动端基础样式 */
    @media screen and (max-width: 768px) {
        html {
            font-size: 14px;
        }

        * {
            -webkit-tap-highlight-color: transparent;
        }

        input, 
        button {
            -webkit-appearance: none;
            border-radius: 0;
        }
    }

         body {
         font-weight: 400;
         line-height: 1.6;
         color: var(--gray-700);
         background: var(--gray-50);
         -webkit-font-smoothing: antialiased;
         -moz-osx-font-smoothing: grayscale;
     }

    /* Grid-Based Layout System */
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 var(--space-xl);
    }

    /* 移动端适配 */
    @media screen and (max-width: 768px) {
        .container { 
            padding: 0 1rem; 
            width: 100%;
            max-width: 100%;
        }

        /* 移动端布局 */
        .hero-title {
            font-size: 1.75rem;
            line-height: 1.3;
            margin-bottom: 1rem;
        }

        .hero-subtitle {
            font-size: 1rem;
            line-height: 1.5;
            margin-bottom: 2rem;
        }

        .section-title {
            font-size: 1.5rem;
            margin-bottom: 0.75rem;
        }

        .section-subtitle {
            font-size: 0.875rem;
            margin-bottom: 1.5rem;
        }

        /* 移动端间距 */
        .py-6xl, 
        .py-5xl, 
        .py-4xl { 
            padding-top: 2rem;
            padding-bottom: 2rem;
        }

        .p-3xl {
            padding: 1rem;
        }

        .gap-2xl {
            gap: 1rem;
        }

        /* 移动端卡片样式 */
        .card {
            border-radius: 0.75rem;
            margin-bottom: 1rem;
        }

        .card-hero {
            border-radius: 1rem;
            padding: 1.25rem;
        }

        /* 移动端按钮样式 */
        .btn {
            width: 100%;
            height: 2.75rem;
            font-size: 0.875rem;
            border-radius: 0.5rem;
        }

        .btn-hero {
            height: 3rem;
            font-size: 1rem;
        }

        /* 移动端输入框样式 */
        .input {
            height: 2.75rem;
            font-size: 0.875rem;
            padding: 0 1rem;
            border-radius: 0.5rem;
        }

        /* 移动端图标尺寸 */
        .feature-icon,
        .hero-icon {
            width: 3rem;
            height: 3rem;
            border-radius: 0.75rem;
        }

        /* 移动端通知样式 */
        .notification {
            width: calc(100% - 2rem);
            left: 1rem;
            right: 1rem;
            border-radius: 0.75rem;
            padding: 1rem;
        }
    }

    /* Professional Typography Hierarchy */
    .hero-title {
        font-size: clamp(2.5rem, 6vw, 3.5rem);
        font-weight: 800;
        line-height: 1.15;
        letter-spacing: -0.015em;
        color: var(--gray-900);
        margin-bottom: var(--space-xl);
        text-align: center;
    }

    .hero-subtitle {
        font-size: clamp(1.25rem, 2.5vw, 1.375rem);
        font-weight: 400;
        line-height: 1.6;
        letter-spacing: 0.005em;
        color: var(--gray-700);
        text-align: center;
        max-width: 36rem;
        margin: 0 auto var(--space-3xl);
    }

    .section-title {
        font-size: clamp(1.75rem, 4vw, 2rem);
        font-weight: 700;
        line-height: 1.25;
        letter-spacing: -0.005em;
        color: var(--gray-900);
        margin-bottom: var(--space-lg);
        text-align: center;
    }

    .section-subtitle {
        font-size: 1.1875rem;
        font-weight: 400;
        line-height: 1.65;
        letter-spacing: 0.002em;
        color: var(--gray-650);
        text-align: center;
        max-width: 32rem;
        margin: 0 auto var(--space-4xl);
    }

 

    .card-subtitle {
        font-size: 1.0625rem;
        font-weight: 500;
        line-height: 1.45;
        letter-spacing: 0.005em;
        color: var(--gray-750);
        margin-bottom: var(--space-sm);
    }

    .feature-title {
        font-size: 1.1875rem;
        font-weight: 600;
        line-height: 1.4;
        letter-spacing: 0.002em;
        color: var(--gray-850);
        margin-bottom: var(--space-sm);
    }

    .text-base {
        font-size: 1.0625rem;
        line-height: 1.65;
        letter-spacing: 0.005em;
        color: var(--gray-650);
    }

    .text-sm {
        font-size: 0.9375rem;
        line-height: 1.55;
        letter-spacing: 0.008em;
        color: var(--gray-550);
    }

    /* Gradient Text - Animation Removed */
    .gradient-youtube {
        background: linear-gradient(135deg, 
            var(--red) 0%, 
            var(--orange) 40%, 
             
            var(--red) 100%
        );
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    /* Enhanced Button System with Organic Flow */
    .btn {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: var(--space-sm);
        padding: var(--space-md) var(--space-xl);
        font-family: inherit;
        font-size: 1.0625rem;
        font-weight: 500;
        letter-spacing: 0.005em;
        text-decoration: none;
        border: none;
        border-radius: 12px;
        cursor: pointer;
        transition: background 0.3s ease, box-shadow 0.3s ease;
        position: relative;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    @media (max-width: 768px) {
        .btn {
            padding: var(--space-sm) var(--space-lg);
            font-size: 0.9375rem;
        }

        .btn-hero {
            padding: var(--space-md) var(--space-xl);
            font-size: 1rem;
        }

        /* 移动端卡片布局优化 */
        .card {
            margin: 0 var(--space-xs);
        }

        .card-hero {
            padding: var(--space-xl);
            border-radius: 24px 28px 20px 32px;
        }
    }

         .btn-primary {
         background: var(--red);
         color: var(--white);
         box-shadow: var(--shadow-low);
     }

     .btn-primary:hover:not(:disabled) {
         background: var(--red-dark);
         box-shadow: var(--shadow-medium);
     }

    .btn-primary:active {
        transform: translateY(0);
        box-shadow: 
            var(--shadow-low), 
            inset 0 1px 0 var(--light-subtle);
    }

    .btn-primary:disabled {
        opacity: 0.6;
        cursor: not-allowed;
        transform: none;
    }

    .btn-secondary {
        background: linear-gradient(145deg, var(--white) 0%, var(--gray-50) 100%);
        color: var(--gray-700);
        border: 1px solid var(--gray-200);
        box-shadow: 
            var(--shadow-soft), 
            inset 0 1px 0 var(--light-top);
    }

    .btn-secondary:hover {
        background: linear-gradient(145deg, var(--gray-50) 0%, var(--gray-100) 100%);
        border-color: var(--gray-300);
        box-shadow: 
            var(--shadow-low), 
            inset 0 1px 0 var(--light-top);
    }

    .btn-hero {
        padding: var(--space-lg) var(--space-2xl);
        font-size: 1.1875rem;
        font-weight: 600;
                 border-radius: 16px;
    }

    /* Enhanced Input System */
    .input-container {
        position: relative;
        width: 100%;
        margin-bottom: var(--space-xl);
    }

    @media (max-width: 768px) {
        .input-container {
            margin-bottom: var(--space-lg);
        }

        .input {
            padding: var(--space-md) var(--space-lg);
            font-size: 0.9375rem;
        }

        /* 优化移动端错误提示 */
        .url-error-container {
            padding: var(--space-sm);
            margin-top: var(--space-xs);
        }

        .url-error-title {
            font-size: 0.8125rem;
        }

        .url-error-message {
            font-size: 0.75rem;
        }
    }

         .input {
         width: 100%;
         padding: var(--space-lg) var(--space-xl);
         font-family: inherit;
         font-size: 1rem;
         font-weight: 400;
         color: var(--gray-800);
         background: var(--white);
         border: 2px solid var(--gray-200);
         border-radius: 12px;
         box-shadow: var(--shadow-soft);
         transition: border-color 0.2s ease, box-shadow 0.2s ease;
         outline: none;
     }

     .input:focus {
         border-color: var(--red);
         box-shadow: 0 0 0 3px rgba(255, 45, 85, 0.1), var(--shadow-low);
     }

    .input::placeholder {
        color: var(--gray-400);
        font-weight: 400;
    }

    /* Status Indicator with Enhanced Glow - Fixed Positioning */
    .status-indicator {
        position: absolute;
        right: 1rem;
        top: 50%;
        transform: translateY(-50%);
        width: 8px;
        height: 8px;
        border-radius: 50%;
        transition: all 0.3s ease;
        z-index: 10;
        pointer-events: none;
    }

    .status-success {
        background: radial-gradient(circle, var(--green-light) 0%, var(--green) 100%);
        box-shadow: 
            0 0 16px rgba(48, 209, 88, 0.4),
            0 0 4px rgba(48, 209, 88, 0.6);
    }

    .status-error {
        background: radial-gradient(circle, var(--red-light) 0%, var(--red) 100%);
        box-shadow: 
            0 0 16px rgba(255, 45, 85, 0.4),
            0 0 4px rgba(255, 45, 85, 0.6);
    }

         /* Simplified Card System for Performance */
     .card {
         background: var(--white);
         border-radius: 16px;
         box-shadow: var(--shadow-low);
         border: 1px solid var(--gray-200);
         transition: box-shadow 0.2s ease;
         overflow: hidden;
         position: relative;
     }

     .card:hover {
         box-shadow: var(--shadow-medium);
     }

    .card-hero {
        background: linear-gradient(145deg, var(--white) 0%, var(--gray-50) 100%);
        border: 2px solid var(--gray-200);
        border-radius: 32px 36px 28px 40px;
        box-shadow: 
            var(--shadow-high),
            inset 0 2px 0 var(--light-top);
        transform: translate3d(0, 0, 0);
    }

    /* Premium Quality Badges */
    .quality-badge {
        padding: var(--space-xs) var(--space-md);
        font-size: 0.75rem;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        border-radius: 12px;
        color: var(--white);
        box-shadow: var(--shadow-medium);
    }

    .badge-pro {
        background: linear-gradient(145deg, var(--orange) 0%, var(--orange-dark) 100%);
        box-shadow: 
            0 4px 16px rgba(255, 149, 0, 0.3),
            inset 0 1px 0 rgba(255, 255, 255, 0.3);
    }

    .badge-hq {
        background: linear-gradient(145deg, var(--blue) 0%, var(--blue-dark) 100%);
        box-shadow: 
            0 4px 16px rgba(0, 122, 255, 0.3),
            inset 0 1px 0 rgba(255, 255, 255, 0.3);
    }

    .badge-sd {
        background: linear-gradient(145deg, var(--green) 0%, var(--green-dark) 100%);
        box-shadow: 
            0 4px 16px rgba(48, 209, 88, 0.3),
            inset 0 1px 0 rgba(255, 255, 255, 0.3);
    }

    .badge-mq {
        background: linear-gradient(145deg, var(--purple) 0%, var(--purple-dark) 100%);
        box-shadow: 
            0 4px 16px rgba(88, 86, 214, 0.3),
            inset 0 1px 0 rgba(255, 255, 255, 0.3);
    }

    /* Simplified Background for Performance */
     .hero-bg {
         background: 
             linear-gradient(135deg, 
                 rgba(255, 45, 85, 0.03) 0%, 
                 rgba(88, 86, 214, 0.025) 50%, 
                 rgba(255, 149, 0, 0.02) 100%
             ),
             var(--gray-50);
         position: relative;
     }
     
     .hero-bg::before {
         content: '';
         position: absolute;
         top: 0;
         left: 0;
         right: 0;
         bottom: 0;
         background: 
             radial-gradient(circle at 30% 30%, rgba(255, 45, 85, 0.015) 0%, transparent 70%),
             radial-gradient(circle at 70% 70%, rgba(88, 86, 214, 0.01) 0%, transparent 70%);
         pointer-events: none;
     }
    
    /* Simplified Section Backgrounds for Performance */
    /* Optimized Section Backgrounds - Performance First */
    .section-bg-primary {
        background: 
            linear-gradient(135deg, 
                var(--white) 0%, 
                rgba(252, 254, 255, 0.8) 50%, 
                var(--white) 100%
            );
        position: relative;
    }
    
    .section-bg-secondary {
        background: 
            radial-gradient(ellipse 800px 500px at 30% 70%, rgba(48, 209, 88, 0.025) 0%, transparent 60%),
            radial-gradient(ellipse 500px 800px at 70% 30%, rgba(255, 45, 85, 0.02) 0%, transparent 60%),
            linear-gradient(135deg, var(--gray-50) 0%, rgba(248, 250, 252, 0.9) 50%, var(--gray-50) 100%);
        position: relative;
    }
    
    .section-bg-accent {
        background: 
            radial-gradient(ellipse 900px 700px at 40% 40%, rgba(0, 122, 255, 0.025) 0%, transparent 60%),
            radial-gradient(ellipse 700px 900px at 60% 60%, rgba(255, 149, 0, 0.02) 0%, transparent 60%),
            linear-gradient(45deg, var(--white) 0%, rgba(252, 254, 255, 0.9) 50%, var(--white) 100%);
        position: relative;
    }

    /* Static Hero Icon for Performance */
    .hero-icon {
        width: 80px;
        height: 80px;
        background: linear-gradient(145deg, var(--red) 0%, var(--red-dark) 100%);
        border-radius: 28px 32px 24px 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 
            var(--shadow-high),
            inset 0 2px 0 rgba(255, 255, 255, 0.3);
        margin: 0 auto var(--space-2xl);
        position: relative;
        transition: box-shadow 0.3s ease;
        transform: translate3d(0, 0, 0);
    }

    .hero-icon:hover {
        box-shadow: 
            var(--shadow-dramatic),
            inset 0 2px 0 rgba(255, 255, 255, 0.4);
    }

    /* Performance Optimized Feature Icons */
    .feature-icon {
        width: 64px;
        height: 64px;
        border-radius: 20px 24px 18px 26px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto var(--space-lg);
        transition: box-shadow 0.3s ease, border-color 0.3s ease;
        box-shadow: var(--shadow-medium);
        position: relative;
        border: 2px solid rgba(255, 255, 255, 0.2);
        will-change: transform;
        transform: translate3d(0, 0, 0);
    }
    
    .feature-icon.with-animation {
        /* Animation removed for performance */
    }

    .feature-icon:hover {
        box-shadow: var(--shadow-high);
        border-color: rgba(255, 255, 255, 0.3);
    }

    .feature-icon svg {
        filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.3));
    }

    .feature-speed {
        background: linear-gradient(145deg, var(--orange) 0%, var(--orange-dark) 100%);
        box-shadow: 
            0 8px 24px rgba(255, 149, 0, 0.3),
            inset 0 2px 0 rgba(255, 255, 255, 0.3);
    }

    .feature-free {
        background: linear-gradient(145deg, var(--green) 0%, var(--green-dark) 100%);
        box-shadow: 
            0 8px 24px rgba(48, 209, 88, 0.3),
            inset 0 2px 0 rgba(255, 255, 255, 0.3);
    }

    .feature-quality {
        background: linear-gradient(145deg, var(--purple) 0%, var(--purple-dark) 100%);
        box-shadow: 
            0 8px 24px rgba(88, 86, 214, 0.3),
            inset 0 2px 0 rgba(255, 255, 255, 0.3);
    }

    /* Use Case Feature Icons */
    .usecase-content {
        background: linear-gradient(145deg, var(--red) 0%, var(--red-dark) 100%);
        box-shadow: 
            0 8px 24px rgba(255, 45, 85, 0.3),
            inset 0 2px 0 rgba(255, 255, 255, 0.3);
    }

    .usecase-marketing {
        background: linear-gradient(145deg, var(--blue) 0%, var(--blue-dark) 100%);
        box-shadow: 
            0 8px 24px rgba(0, 122, 255, 0.3),
            inset 0 2px 0 rgba(255, 255, 255, 0.3);
    }

    .usecase-media {
        background: linear-gradient(145deg, var(--purple) 0%, var(--purple-dark) 100%);
        box-shadow: 
            0 8px 24px rgba(88, 86, 214, 0.3),
            inset 0 2px 0 rgba(255, 255, 255, 0.3);
    }

    /* Grid System for Order */
    .grid {
        display: grid;
        gap: var(--space-xl);
    }

    .grid-1 { grid-template-columns: 1fr; }

    /* 响应式网格系统优化 */
    .grid {
        display: grid;
        gap: var(--space-lg);
        padding: 0 var(--space-xs);
    }

    @media (min-width: 640px) {
        .sm-grid-2 { 
            grid-template-columns: repeat(2, 1fr); 
            gap: var(--space-xl);
        }
        .grid {
            padding: 0;
        }
    }

    @media (min-width: 1024px) {
        .lg-grid-3 { 
            grid-template-columns: repeat(3, 1fr); 
            gap: var(--space-2xl);
        }
        .lg-grid-4 { 
            grid-template-columns: repeat(4, 1fr); 
            gap: var(--space-xl);
        }
    }

    @media (min-width: 1280px) {
        .xl\\:grid-cols-5 { 
            grid-template-columns: repeat(5, 1fr); 
        }
    }

    /* 移动端网格布局 */
    @media screen and (max-width: 639px) {
        .grid {
            display: block;
            margin: 0 -1rem;
            padding: 0 1rem;
        }

        .grid > * {
            margin-bottom: 1rem;
        }

        .grid > *:last-child {
            margin-bottom: 0;
        }

        .sm-grid-2,
        .lg-grid-3,
        .lg-grid-4 {
            display: block;
        }

        /* 移动端特殊处理 */
        .feature-icon {
            margin: 0 auto 1rem;
        }

        .notification {
            position: fixed;
            bottom: 1rem;
            left: 1rem;
            right: 1rem;
            margin: 0;
            z-index: 100;
        }
    }

    /* Enhanced Notification with Hero Design Language */
    .notification {
        background: 
            linear-gradient(145deg, var(--white) 0%, rgba(248, 255, 252, 0.95) 100%),
            radial-gradient(ellipse 200px 100px at 80% 20%, rgba(48, 209, 88, 0.08) 0%, transparent 60%);
        border-radius: 20px 24px 18px 26px;
        box-shadow: 
            var(--shadow-high),
            inset 0 2px 0 var(--light-top);
        border: 2px solid rgba(48, 209, 88, 0.15);
        padding: var(--space-xl);
        animation: slideIn 0.6s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        overflow: hidden;
        backdrop-filter: blur(8px);
    }

    .notification::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        width: 6px;
        background: linear-gradient(180deg, var(--green) 0%, var(--green-dark) 100%);
        border-radius: 0 3px 3px 0;
        box-shadow: 0 0 8px rgba(48, 209, 88, 0.4);
    }

    .notification-icon {
        width: 44px;
        height: 44px;
        background: linear-gradient(145deg, var(--green) 0%, var(--green-dark) 100%);
        border-radius: 14px 16px 12px 18px;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        box-shadow: 
            0 6px 16px rgba(48, 209, 88, 0.3),
            inset 0 2px 0 rgba(255, 255, 255, 0.3);
        transform: translate3d(0, 0, 0);
    }

    @keyframes slideIn {
        from {
            opacity: 0;
            transform: translateX(100%) scale(0.95);
        }
        to {
            opacity: 1;
            transform: translateX(0) scale(1);
        }
    }

    @keyframes spin {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }

    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(40px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @keyframes slideInFromLeft {
        from {
            opacity: 0;
            transform: translateX(-60px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    @keyframes slideInFromRight {
        from {
            opacity: 0;
            transform: translateX(60px);
        }
        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    @keyframes scaleIn {
        from {
            opacity: 0;
            transform: scale(0.8);
        }
        to {
            opacity: 1;
            transform: scale(1);
        }
    }

    @keyframes float {
        0%, 100% {
            transform: translate3d(0, 0px, 0);
        }
        50% {
            transform: translate3d(0, -10px, 0);
        }
    }

    @keyframes morphFlow {
        0%, 100% {
            border-radius: 24px 32px 28px 20px;
        }
        50% {
            border-radius: 28px 20px 32px 24px;
        }
    }

    /* Performance optimized animations */
    @keyframes subtleFloat {
        0%, 100% {
            transform: translate3d(0, 0px, 0);
        }
        50% {
            transform: translate3d(0, -5px, 0);
        }
    }

    /* Error Message with Organic Design */
    .error-container {
        background: linear-gradient(145deg, #fff5f5 0%, #fef2f2 100%);
        border: 2px solid #fed7d7;
        border-radius: 18px 22px 16px 24px;
        padding: var(--space-lg);
        box-shadow: 
            var(--shadow-low),
            inset 0 1px 0 rgba(255, 255, 255, 0.5);
    }

    .error-icon {
        width: 24px;
        height: 24px;
        background: linear-gradient(145deg, var(--red) 0%, var(--red-dark) 100%);
        border-radius: 12px 14px 10px 16px;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        box-shadow: 
            0 4px 8px rgba(255, 45, 85, 0.3),
            inset 0 1px 0 rgba(255, 255, 255, 0.3);
    }

    /* URL Validation Error */
    .url-error-container {
        background: linear-gradient(145deg, #fff5f5 0%, #fef2f2 100%);
        border: 2px solid rgba(255, 45, 85, 0.2);
        border-radius: 16px 20px 14px 22px;
        padding: var(--space-md);
        margin-top: var(--space-sm);
        display: flex;
        align-items: flex-start;
        gap: var(--space-sm);
        box-shadow: var(--shadow-soft);
    }

    .url-error-icon {
        width: 16px;
        height: 16px;
        background: linear-gradient(145deg, var(--red) 0%, var(--red-dark) 100%);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        margin-top: 2px;
        box-shadow: 
            0 2px 4px rgba(255, 45, 85, 0.3),
            inset 0 1px 0 rgba(255, 255, 255, 0.3);
    }

    .url-error-content {
        flex: 1;
    }

    .url-error-title {
        font-size: 0.875rem;
        font-weight: 600;
        color: #991b1b;
        margin-bottom: 2px;
        line-height: 1.3;
    }

    .url-error-message {
        font-size: 0.8125rem;
        color: #b91c1c;
        line-height: 1.4;
    }

    /* Utility Classes */
    .w-full { width: 100%; }
    .h-full { height: 100%; }
    .min-h-screen { min-height: 100vh; }
    
    .flex { display: flex; }
    .items-center { align-items: center; }
    .items-start { align-items: flex-start; }
    .justify-center { justify-content: center; }
    .justify-between { justify-content: space-between; }
    .flex-col { flex-direction: column; }
    .flex-shrink-0 { flex-shrink: 0; }
    
    .text-center { text-align: center; }
    .text-white { color: var(--white); }
    
    .gap-2xs { gap: var(--space-2xs); }
    .gap-xs { gap: var(--space-xs); }
    .gap-sm { gap: var(--space-sm); }
    .gap-md { gap: var(--space-md); }
    .gap-lg { gap: var(--space-lg); }
    .gap-xl { gap: var(--space-xl); }
    .gap-2xl { gap: var(--space-2xl); }
    
    .p-lg { padding: var(--space-lg); }
    .p-xl { padding: var(--space-xl); }
    .p-2xl { padding: var(--space-2xl); }
    .p-3xl { padding: var(--space-3xl); }
    
    .py-3xl { padding-top: var(--space-3xl); padding-bottom: var(--space-3xl); }
    .py-4xl { padding-top: var(--space-4xl); padding-bottom: var(--space-4xl); }
    .py-5xl { padding-top: var(--space-5xl); padding-bottom: var(--space-5xl); }
    .py-6xl { padding-top: var(--space-6xl); padding-bottom: var(--space-6xl); }
    
    .mb-0 { margin-bottom: 0; }
    .mb-2xs { margin-bottom: var(--space-2xs); }
    .mb-xs { margin-bottom: var(--space-xs); }
    .mb-sm { margin-bottom: var(--space-sm); }
    .mb-md { margin-bottom: var(--space-md); }
    .mb-lg { margin-bottom: var(--space-lg); }
    .mb-xl { margin-bottom: var(--space-xl); }
    .mb-2xl { margin-bottom: var(--space-2xl); }
    .mb-3xl { margin-bottom: var(--space-3xl); }
    
    .max-w-sm { max-width: 24rem; }
    .max-w-md { max-width: 28rem; }
    .max-w-lg { max-width: 32rem; }
    .max-w-2xl { max-width: 42rem; }
    .max-w-4xl { max-width: 56rem; }
    .max-w-6xl { max-width: 72rem; }
    .mx-auto { margin: 0 auto; }
    
    .relative { position: relative; }
    .absolute { position: absolute; }
    .fixed { position: fixed; }
    .top-6 { top: var(--space-lg); }
    .right-6 { right: var(--space-lg); }
    .z-50 { z-index: 50; }
    
    .rounded-2xl { border-radius: 18px 22px 16px 24px; }
    .rounded-xl { border-radius: 16px 20px 14px 22px; }
    .rounded-lg { border-radius: 12px 16px 10px 18px; }
    .aspect-video { aspect-ratio: 16 / 9; }
    .object-cover { object-fit: cover; }
    .overflow-hidden { overflow: hidden; }
    
    .animate-spin { animation: spin 1s linear infinite; }
    
    /* Performance Optimized Animation Classes */
    .animate-on-scroll {
        opacity: 0;
        transition: opacity 0.6s ease, transform 0.6s ease;
        will-change: transform, opacity;
    }
    
    /* Performance optimization for animated elements */
    .performance-optimized {
        will-change: transform;
        transform: translate3d(0, 0, 0);
        backface-visibility: hidden;
        perspective: 1000px;
    }
    
    /* Reduced animation for performance */
    .subtle-animation {
        animation-duration: 8s;
        animation-timing-function: ease-in-out;
        animation-iteration-count: infinite;
        will-change: transform;
    }
    
    .animate-fade-up {
        animation: fadeInUp 0.8s ease-out forwards;
    }
    
    .animate-slide-left {
        animation: slideInFromLeft 0.8s ease-out forwards;
    }
    
    .animate-slide-right {
        animation: slideInFromRight 0.8s ease-out forwards;
    }
    
    .animate-scale {
        animation: scaleIn 0.8s ease-out forwards;
    }
    
    /* Organic SVG Styles */
    .organic-youtube-icon {
        filter: drop-shadow(0 4px 8px rgba(255, 45, 85, 0.3));
    }
    
    .organic-feature-icon {
        filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
    }
    
    .space-y-2xs > * + * { margin-top: var(--space-2xs); }
    .space-y-xs > * + * { margin-top: var(--space-xs); }
    .space-y-sm > * + * { margin-top: var(--space-sm); }
    .space-y-md > * + * { margin-top: var(--space-md); }
    .space-y-lg > * + * { margin-top: var(--space-lg); }
    .space-y-xl > * + * { margin-top: var(--space-xl); }
    .space-y-2xl > * + * { margin-top: var(--space-2xl); }
</style>

<div 
    x-data="{
        videoUrl: '',
        showResults: false,
        showError: false,
        errorMessage: '',
        videoId: null,
        isLoading: false,
        animatedElements: new Set(),
        performanceMode: true, // Default performance mode enabled
        
                 initScrollAnimations() {
             const observer = new IntersectionObserver((entries) => {
                 entries.forEach(entry => {
                     if (entry.isIntersecting) {
                         entry.target.style.opacity = '1';
                         entry.target.style.transform = 'none';
                         observer.unobserve(entry.target);
                     }
                 });
             }, {
                 threshold: 0.1,
                 rootMargin: '50px'
             });
             
             document.querySelectorAll('.animate-on-scroll').forEach(el => {
                 observer.observe(el);
             });
         },
        thumbnailOptions: [], // Dynamic array populated after successful fetch
        allQualityOptions: [
            { 
                name: '4K Ultra HD', 
                urlSuffix: 'maxresdefault.jpg',
                description: 'Maximum resolution available (up to 4K)',
                badge: '4K',
                badgeClass: 'badge-pro',
                priority: 1
            },
            { 
                name: 'High Quality', 
                urlSuffix: 'hqdefault.jpg',
                description: 'Perfect for web and social media',
                badge: 'HQ',
                badgeClass: 'badge-hq',
                priority: 2
            },
            { 
                name: 'Standard', 
                urlSuffix: 'sddefault.jpg',
                description: 'Great balance of size and quality',
                badge: 'SD',
                badgeClass: 'badge-sd',
                priority: 3
            },
            { 
                name: 'Medium', 
                urlSuffix: 'mqdefault.jpg',
                description: 'Fast loading, smaller file size',
                badge: 'MQ',
                badgeClass: 'badge-mq',
                priority: 4
            },
            { 
                name: 'Default', 
                urlSuffix: 'default.jpg',
                description: 'Compact thumbnail for quick previews',
                badge: 'SM',
                badgeClass: 'badge-mq',
                priority: 5
            }
        ],
        
        // 获取图片实际尺寸
        async getImageDimensions(url) {
            return new Promise((resolve, reject) => {
                const img = new Image();
                img.onload = function() {
                    resolve({
                        width: this.width,
                        height: this.height
                    });
                };
                img.onerror = reject;
                img.src = url;
            });
        },
        extractVideoId(url) {
            if (!url) return null;
            
            // Clean URL - remove prefix symbols and spaces
            url = url.trim().replace(/^[@#*\-\s]+/, '');
            
            // Ensure URL has protocol
            if (!url.startsWith('http://') && !url.startsWith('https://')) {
                if (url.startsWith('www.') || url.startsWith('youtube.com') || url.startsWith('youtu.be')) {
                    url = 'https://' + url;
                }
            }
            
            console.log('Cleaned URL:', url);
            
            // Handle iframe embed code
            if (url.includes('<iframe') && url.includes('youtube.com/embed/')) {
                const iframeMatch = url.match(/youtube\.com\/embed\/([a-zA-Z0-9_-]{11})/);
                return iframeMatch ? iframeMatch[1] : null;
            }
            
            // Strict check: must contain YouTube domain
            if (!url.includes('youtube.com') && !url.includes('youtu.be')) {
                return null;
            }
            
            // Strict regex patterns
            const patterns = [
                // Standard format: https://www.youtube.com/watch?v=VIDEO_ID (supports playlist and other parameters)
                /(?:https?:\/\/)?(?:www\.)?youtube\.com\/watch\?.*[&?]v=([a-zA-Z0-9_-]{11})/,
                /(?:https?:\/\/)?(?:www\.)?youtube\.com\/watch\?v=([a-zA-Z0-9_-]{11})/,
                // Short format: https://youtu.be/VIDEO_ID
                /(?:https?:\/\/)?youtu\.be\/([a-zA-Z0-9_-]{11})/,
                // Embed format: https://www.youtube.com/embed/VIDEO_ID
                /(?:https?:\/\/)?(?:www\.)?youtube\.com\/embed\/([a-zA-Z0-9_-]{11})/,
                // Share format with timestamp: https://youtu.be/VIDEO_ID?t=123
                /(?:https?:\/\/)?youtu\.be\/([a-zA-Z0-9_-]{11})\?.*$/
            ];
            
            for (let pattern of patterns) {
                const match = url.match(pattern);
                if (match && match[1]) {
                    console.log('Extracted video ID:', match[1]);
                    return match[1];
                }
            }
            console.log('No video ID found');
            return null;
        },
        
        isValidYouTubeUrl(url) {
            if (!url || url.trim().length === 0) return false;
            
            // Handle iframe embed code
            if (url.includes('<iframe') && url.includes('youtube.com/embed/')) {
                const iframeMatch = url.match(/youtube\.com\/embed\/([a-zA-Z0-9_-]{11})/);
                return iframeMatch !== null;
            }
            
            // Must contain YouTube domain
            if (!url.includes('youtube.com') && !url.includes('youtu.be')) {
                return false;
            }
            
            // Must be able to extract valid video ID
            return this.extractVideoId(url) !== null;
        },
        showErrorMessage(message) {
            this.errorMessage = message;
            this.showError = true;
            
            setTimeout(() => {
                this.showError = false;
            }, 5000);
        },
        async extractThumbnails() {
            const url = this.videoUrl.trim();
            
            if (!url) {
                this.showErrorMessage('Please enter a YouTube video URL');
                return;
            }
            
            // Use strict validation
            if (!this.isValidYouTubeUrl(url)) {
                this.showErrorMessage('Please enter a valid YouTube URL. Supported formats:\n• https://www.youtube.com/watch?v=VIDEO_ID\n• https://youtu.be/VIDEO_ID\n• YouTube embed code URL');
                return;
            }
            
            const videoId = this.extractVideoId(url);
            console.log('Extracted video ID:', videoId);
            
            if (!videoId) {
                this.showErrorMessage('Unable to extract video ID from this URL, please check the URL format');
                return;
            }
            
            // Start loading state
            this.isLoading = true;
            this.showError = false;
            this.showResults = false;
            this.thumbnailOptions = []; // Clear previous results
            
            console.log('Processing video ID:', videoId);
            
            try {
                // Step 1: Verify video exists by fetching default thumbnail
                const defaultOption = this.allQualityOptions.find(opt => opt.urlSuffix === 'default.jpg');
                const defaultUrl = `https://img.youtube.com/vi/${videoId}/${defaultOption.urlSuffix}`;
                
                const defaultExists = await this.checkImageExists(defaultUrl);
                if (!defaultExists) {
                    throw new Error('Video not found or thumbnails not available');
                }
                
                // Step 2: Video exists, set videoId and show results section
                this.videoId = videoId;
                this.showResults = true;
                this.isLoading = false;
                
                // Step 3: Add default thumbnail first with actual dimensions
                try {
                    const dimensions = await this.getImageDimensions(defaultUrl);
                    this.thumbnailOptions.push({
                        ...defaultOption,
                        imageUrl: defaultUrl,
                        size: `${dimensions.width}×${dimensions.height}`,
                        loaded: true
                    });
                } catch (error) {
                    console.error('Error getting dimensions for default thumbnail:', error);
                    // 如果获取尺寸失败，仍然添加缩略图但不显示尺寸
                    this.thumbnailOptions.push({
                        ...defaultOption,
                        imageUrl: defaultUrl,
                        loaded: true
                    });
                }
                
                // Step 4: Scroll to results
                this.$nextTick(() => {
                    const element = document.getElementById('results');
                    if (element) {
                        element.scrollIntoView({ behavior: 'smooth' });
                    }
                });
                
                // Step 5: Async fetch other quality options
                this.fetchOtherQualities(videoId);
                
            } catch (error) {
                this.isLoading = false;
                this.showErrorMessage('Failed to load video thumbnails. Please check if the video exists and is public.');
                console.error('Error fetching thumbnails:', error);
            }
        },
        async downloadThumbnail(urlSuffix, optionName) {
            const url = `https://img.youtube.com/vi/${this.videoId}/${urlSuffix}`;
            const filename = `${this.videoId}_${optionName.replace(/\s+/g, '_')}.jpg`;
            
            try {
                // Fetch the image as blob
                const response = await fetch(url);
                const blob = await response.blob();
                
                // Create blob URL
                const blobUrl = window.URL.createObjectURL(blob);
                
                // Create download link
                const link = document.createElement('a');
                link.href = blobUrl;
                link.download = filename;
                link.style.display = 'none';
                
                // Add to DOM, click, then remove
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
                
                // Clean up blob URL
                window.URL.revokeObjectURL(blobUrl);
                
                this.$dispatch('notify', {
                    message: `${optionName} downloaded successfully!`
                });
            } catch (error) {
                console.error('Download failed:', error);
                // Fallback to direct link method
                const link = document.createElement('a');
                link.href = url;
                link.download = filename;
                link.target = '_blank';
                link.style.display = 'none';
                
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
                
                this.$dispatch('notify', {
                    message: `${optionName} download started (opened in new tab)`
                });
            }
        },
        copyToClipboard(text) {
            navigator.clipboard.writeText(text);
            this.$dispatch('notify', {
                message: 'URL copied to clipboard!'
            });
                },
        
        async checkImageExists(url) {
            try {
                const response = await fetch(url, { method: 'HEAD' });
                return response.ok && response.status !== 404;
            } catch (error) {
                console.error('Error checking image:', error);
                return false;
            }
        },
        
        async fetchOtherQualities(videoId) {
            // Get all qualities except default (already loaded)
            const otherQualities = this.allQualityOptions
                .filter(opt => opt.urlSuffix !== 'default.jpg')
                .sort((a, b) => a.priority - b.priority); // Sort by priority
            
            for (const option of otherQualities) {
                try {
                    const url = `https://img.youtube.com/vi/${videoId}/${option.urlSuffix}`;
                    const exists = await this.checkImageExists(url);
                    
                    if (exists) {
                                try {
                            // 获取图片实际尺寸
                            const dimensions = await this.getImageDimensions(url);
                            
                            // Add to thumbnailOptions array with actual dimensions
                            this.thumbnailOptions.push({
                                ...option,
                                imageUrl: url,
                                size: `${dimensions.width}×${dimensions.height}`,
                                loaded: true
                            });
                        } catch (error) {
                            console.error(`Error getting dimensions for ${option.name}:`, error);
                        }
                        console.log(`Added ${option.name} thumbnail`);
                    } else {
                        console.log(`${option.name} thumbnail not available`);
                    }
                } catch (error) {
                    console.error(`Error fetching ${option.name}:`, error);
                }
                
                // Small delay to avoid overwhelming the server
                await new Promise(resolve => setTimeout(resolve, 100));
            }
            
            console.log('Finished fetching all available thumbnails');
        },
        
        handleImageError(imgElement, originalSuffix) {
            // Simple fallback strategy - try next quality level
            const fallbackOrder = [
                'maxresdefault.jpg',  // 4K
                'hqdefault.jpg',      // High quality
                'mqdefault.jpg',      // Medium quality
                'default.jpg'         // Default
            ];
            
            const currentIndex = fallbackOrder.indexOf(originalSuffix);
            const nextIndex = currentIndex + 1;
            
            if (nextIndex < fallbackOrder.length) {
                const nextSuffix = fallbackOrder[nextIndex];
                const nextUrl = `https://img.youtube.com/vi/${this.videoId}/${nextSuffix}`;
                imgElement.src = nextUrl;
            } else {
                // All fallbacks exhausted, show placeholder
                this.showImagePlaceholder(imgElement);
            }
        },
        

        
        showImagePlaceholder(imgElement) {
            imgElement.style.display = 'none';
            const container = imgElement.parentElement;
            
            if (!container.querySelector('.thumbnail-placeholder')) {
                const placeholder = document.createElement('div');
                placeholder.className = 'thumbnail-placeholder';
                placeholder.style.cssText = `
                    width: 100%;
                    aspect-ratio: 16/9;
                    background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    border-radius: 12px;
                    border: 2px dashed #d1d5db;
                    color: #6b7280;
                    font-size: 14px;
                    font-weight: 500;
                `;
                
                placeholder.textContent = 'Thumbnail unavailable';
                container.appendChild(placeholder);
            }
        }
    }"
    x-init="initScrollAnimations()"
    class="min-h-screen"
>
    <!-- Hero Section with Visual Flow -->
    <section class="hero-bg py-6xl">
        <div class="container">
            <div class="max-w-4xl mx-auto">
                
                <!-- Focal Point: Organic YouTube Icon -->
                <div class="hero-icon">
                    <svg class="w-10 h-10 organic-youtube-icon" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <!-- Organic YouTube Play Button -->
                        <path d="M25.5 22.8C25.5 20.3 27.3 18.2 29.7 17.8C45.8 15.2 54.2 15.2 70.3 17.8C72.7 18.2 74.5 20.3 74.5 22.8V77.2C74.5 79.7 72.7 81.8 70.3 82.2C54.2 84.8 45.8 84.8 29.7 82.2C27.3 81.8 25.5 79.7 25.5 77.2V22.8Z" fill="white" opacity="0.9"/>
                        <!-- Flowing Play Triangle -->
                        <path d="M42.2 32.5C41.1 31.8 39.6 32.6 39.6 33.9V66.1C39.6 67.4 41.1 68.2 42.2 67.5L67.8 51.4C68.7 50.8 68.7 49.2 67.8 48.6L42.2 32.5Z" fill="url(#playGradient)"/>
                        <!-- Organic Highlight Curves -->
                        <path d="M30.5 25.2C30.5 23.4 31.9 22 33.7 22H66.3C68.1 22 69.5 23.4 69.5 25.2C69.5 26.1 68.8 26.8 67.9 26.8H32.1C31.2 26.8 30.5 26.1 30.5 25.2Z" fill="white" opacity="0.3"/>
                        
                        <defs>
                            <linearGradient id="playGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                                <stop offset="0%" style="stop-color:#ff2d55;stop-opacity:1" />
                                <stop offset="100%" style="stop-color:#e60026;stop-opacity:1" />
                            </linearGradient>
                        </defs>
                    </svg>
                </div>
                
                <!-- Primary Visual Element: Title -->
                <h1 class="hero-title animate-on-scroll gradient-youtube" data-animate="fade-up">
                    YouTube Thumbnail Grabber
                </h1>
                
                <!-- Secondary Support: Subtitle -->
                <p class="hero-subtitle animate-on-scroll" data-animate="fade-up" style="animation-delay: 0.2s;">
                    Extract high-quality thumbnails from any YouTube video in seconds. 
                    Professional tools for content creators, bloggers, and digital marketers.
                </p>
                
                <!-- Core CTA Section -->
                <div class="max-w-2xl mx-auto animate-on-scroll" data-animate="scale" style="animation-delay: 0.4s;">
                    <div class="card card-hero p-3xl">
                        <div class="space-y-2xl">
                            
                            <!-- Clear Action Direction -->
                            <div class="text-center">
                                <h2 class="card-title justify-center font-bold">Ready to extract?</h2>
                                <p class="text-base mt-4 font-light">
                                    Paste any YouTube video URL below to get started. 
                                    Choose from multiple quality options to match your needs.
                                </p>
                                

                            </div>
                            
                                                        <!-- Primary Input Flow -->
                            <div class="input-container">
                        <input 
                                    type="url" 
                                    x-model="videoUrl"
                                    @keyup.enter="extractThumbnails()"
                                    placeholder="https://www.youtube.com/watch?v=miYfKfuMX7M"
                                    class="input rounded-xl-bl"
                                    style="padding-right: 2.5rem;"
                                />
                                <div class="status-indicator"
                                     x-show="videoUrl.length > 0"
                                     x-transition:enter="transition ease-out duration-300"
                                     x-transition:enter-start="opacity-0 scale-0"
                                     x-transition:enter-end="opacity-1 scale-1"
                                     x-bind:class="isValidYouTubeUrl(videoUrl) ? 'status-success' : 'status-error'">
                    </div>
                    
                                <!-- 即時驗證提示 -->
                                <div x-show="videoUrl.length > 0 && !isValidYouTubeUrl(videoUrl)" 
                                     x-transition:enter="transition ease-out duration-300"
                                     x-transition:enter-start="opacity-0 transform translate-y-2"
                                     x-transition:enter-end="opacity-1 transform translate-y-0">
                                    <div class="url-error-container">
                                        <div class="url-error-icon">
                                            <svg class="w-2 h-2 text-white" fill="currentColor" viewBox="0 0 20 20">
                                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                                            </svg>
                                        </div>
                                        <div class="url-error-content">
                                            <div class="url-error-title">Invalid YouTube URL</div>
                                            <div class="url-error-message">Please enter a valid YouTube link or embed code</div>
                                        </div>
                                    </div>
                                </div>
                </div>
                            
                            <!-- Primary CTA Button -->
                            <button 
                                class="btn btn-primary btn-hero w-full"
                                @click="extractThumbnails()" 
                                x-bind:disabled="isLoading || !isValidYouTubeUrl(videoUrl)"
                            >
                                <span x-show="!isLoading" class="flex items-center gap-md">
                                    <Lucideicons.download class="w-5 h-5" />
                                    Extract All Thumbnails
                                </span>
                                <span x-show="isLoading" class="flex items-center gap-md">
                                    <Lucideicons.loader class="w-5 h-5 animate-spin" />
                                    Extracting...
                                </span>
                            </button>

                            
                            <!-- Error State -->
                            <div 
                                x-show="showError" 
                                x-transition:enter="transition ease-out duration-300"
                                x-transition:enter-start="opacity-0 scale-95"
                                x-transition:enter-end="opacity-1 scale-100"
                                class="error-container flex items-start gap-md"
                            >
                                <div class="error-icon">
                                    <Lucideicons.triangle_alert class="w-3 h-3 text-white" />
                                </div>
                                <div>
                                    <p class="font-medium text-red-600 mb-2xs">Error</p>
                                    <p x-text="errorMessage" class="text-sm text-red-500"></p>
                                </div>
                            </div>
                            
                        </div>
                    </div>
                </div>
                
            </div>
        </div>
    </section>

    <!-- Results Section with Balanced Grid -->
    <section 
        x-show="showResults" 
        x-transition:enter="transition ease-out duration-500"
        x-transition:enter-start="opacity-0 transform translate-y-8"
        x-transition:enter-end="opacity-1 transform translate-y-0"
        class="py-5xl section-bg-secondary" 
        id="results"
    >
        <div class="container">
            
            <!-- Section Header with Enhanced Design -->
            <div class="text-center mb-4xl animate-on-scroll section-bg-accent" data-animate="fade-up">
                <div class="inline-flex items-center gap-sm mb-lg">
                    <div class="w-8 h-8 rounded-xl flex items-center justify-center feature-icon feature-quality performance-optimized">
                        <svg class="w-4 h-4" fill="white" viewBox="0 0 24 24">
                            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                        </svg>
                    </div>
                    <h2 class="section-title mb-0">Choose Your Quality</h2>
                </div>
                <p class="section-subtitle">
                    Select the perfect resolution for your needs—from web-ready formats to ultra-high definition.
                </p>
            </div>



            <!-- Organized Grid Layout -->
            <div class="grid grid-1 sm-grid-2 lg-grid-3 xl:grid-cols-5 max-w-7xl mx-auto gap-xl lg:gap-2xl">
                <template x-for="(option, index) in thumbnailOptions" x-bind:key="option.name">
                    <div 
                        class="card"
                        x-transition:enter="transition ease-out duration-500"
                        x-transition:enter-start="opacity-0 transform translate-y-8"
                        x-transition:enter-end="opacity-1 transform translate-y-0"
                        x-bind:style="`transition-delay: ${index * 150}ms;`"
                    >
                        <!-- Visual Preview -->
                        <div class="relative overflow-hidden">
                            <img 
                                x-bind:src="videoId ? `https://img.youtube.com/vi/${videoId}/${option.urlSuffix}` : ''"
                                x-bind:alt="option.name"
                                class="w-full aspect-video object-cover"
                                @error="handleImageError($el, option.urlSuffix)"
                                @load="$el.style.opacity = '1'"
                                style="opacity: 0; transition: opacity 0.3s ease;"
                            />
                            <!-- Quality Indicator -->
                            <div class="absolute top-4 right-4">
                                <span class="quality-badge" x-bind:class="option.badgeClass" x-text="option.badge"></span>
                            </div>
                        </div>

                        <div class="p-xl space-y-lg">
                            <!-- Information Hierarchy -->
                            <div class="space-y-sm">
                                <div class="flex items-center justify-between">
                                    <h3 class="card-subtitle mb-0" x-text="option.name"></h3>
                                    <span class="text-sm text-gray-500">JPG</span>
                                </div>
                                <p class="text-sm text-gray-600" x-text="option.description"></p>
                                <div class="flex items-center gap-md text-sm text-gray-500">
                                    <Lucideicons.image class="w-4 h-4" />
                                    <span x-text="option.size"></span>
                                </div>
                            </div>

                            <!-- Action Buttons with Clear Hierarchy -->
                            <div class="space-y-md">
                                <button 
                                    class="btn btn-primary w-full"
                                    @click="downloadThumbnail(option.urlSuffix, option.name)"
                                    x-bind:disabled="!videoId"
                                >
                                    <Lucideicons.download class="w-4 h-4" />
                                    Download
                                </button>
                                <button 
                                    class="btn btn-secondary w-full"
                                    @click="copyToClipboard(`https://img.youtube.com/vi/${videoId}/${option.urlSuffix}`)"
                                    x-bind:disabled="!videoId"
                                >
                                    <Lucideicons.copy class="w-4 h-4" />
                                    Copy URL
                                </button>
                            </div>
                        </div>
                    </div>
                </template>
            </div>
            
        </div>
    </section>

    <!-- Features Section with Visual Balance -->
    <section class="py-5xl section-bg-accent">
        <div class="container">
            
            <!-- Balanced Header -->
            <div class="text-center mb-4xl animate-on-scroll" data-animate="fade-up">
                <h2 class="section-title">Why Choose Our Tool</h2>
                <p class="section-subtitle">
                    Professional-grade thumbnail extraction trusted by creators worldwide
                </p>
            </div>
            
            <!-- Symmetrical Feature Grid -->
            <div class="grid grid-1 lg-grid-3 max-w-4xl mx-auto">
                <div class="text-center space-y-lg animate-on-scroll" data-animate="slide-left">
                    <div class="feature-icon feature-speed performance-optimized">
                        <svg class="w-8 h-8 organic-feature-icon" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <!-- Organic Lightning Bolt -->
                            <path d="M45.2 12.8C46.1 11.2 48.5 11.7 48.8 13.6L52.3 35.4C52.4 36.2 53.1 36.8 53.9 36.7L72.8 34.9C74.7 34.7 75.8 37.1 74.4 38.6L32.6 82.4C31.1 84.0 28.6 82.1 29.7 80.1L42.8 56.2C43.3 55.2 42.9 54.0 41.8 53.6L22.4 45.8C20.9 45.2 20.8 43.0 22.2 42.2L45.2 12.8Z" fill="white"/>
                            <!-- Flowing Energy Curves -->
                            <path d="M35.5 28.3C35.5 27.1 36.5 26.1 37.7 26.1C46.2 26.1 52.8 32.7 52.8 41.2C52.8 42.4 51.8 43.4 50.6 43.4C49.4 43.4 48.4 42.4 48.4 41.2C48.4 35.1 43.8 30.5 37.7 30.5C36.5 30.5 35.5 29.5 35.5 28.3Z" fill="white" opacity="0.6"/>
                            <path d="M58.2 65.8C58.2 64.6 59.2 63.6 60.4 63.6C65.9 63.6 70.3 59.2 70.3 53.7C70.3 52.5 71.3 51.5 72.5 51.5C73.7 51.5 74.7 52.5 74.7 53.7C74.7 61.6 68.3 68.0 60.4 68.0C59.2 68.0 58.2 67.0 58.2 65.8Z" fill="white" opacity="0.6"/>
                        </svg>
                    </div>
                    <h3 class="feature-title">Lightning Fast</h3>
                    <p class="text-base">Extract all thumbnail sizes in under 2 seconds. Our YouTube thumbnail grabber outperforms browser extensions with instant processing and no installation required.</p>
                </div>
                
                <div class="text-center space-y-lg animate-on-scroll" data-animate="fade-up">
                    <div class="feature-icon feature-free performance-optimized">
                        <svg class="w-8 h-8 organic-feature-icon" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <!-- Organic Shield with Flowing Check -->
                            <path d="M50 15.2C50 13.8 49.2 12.6 47.9 12.1C44.3 10.8 38.7 10.3 32.1 11.8C29.8 12.3 28.1 14.4 28.1 16.8V45.6C28.1 63.2 39.8 78.9 47.2 85.7C49.1 87.4 51.9 87.4 53.8 85.7C61.2 78.9 72.9 63.2 72.9 45.6V16.8C72.9 14.4 71.2 12.3 68.9 11.8C62.3 10.3 56.7 10.8 53.1 12.1C51.8 12.6 51 13.8 51 15.2H50Z" fill="white"/>
                            <!-- Flowing Checkmark -->
                            <path d="M42.8 48.6C41.9 47.6 40.3 47.6 39.4 48.6C38.5 49.5 38.5 51.1 39.4 52.0L45.2 57.8C46.1 58.7 47.7 58.7 48.6 57.8L62.6 43.8C63.5 42.9 63.5 41.3 62.6 40.4C61.7 39.5 60.1 39.5 59.2 40.4L46.9 52.7L42.8 48.6Z" fill="url(#checkGradient)"/>
                            
                            <defs>
                                <linearGradient id="checkGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                                    <stop offset="0%" style="stop-color:#30d158;stop-opacity:1" />
                                    <stop offset="100%" style="stop-color:#28a745;stop-opacity:1" />
                                </linearGradient>
                            </defs>
                        </svg>
                    </div>
                    <h3 class="feature-title">100% Free</h3>
                    <p class="text-base">No registration, no watermarks, no limitations. Unlike YouTube thumbnail grabber extensions that require installation, our web-based tool is completely free and accessible from any device.</p>
                </div>
                
                <div class="text-center space-y-lg animate-on-scroll" data-animate="slide-right">
                    <div class="feature-icon feature-quality performance-optimized">
                        <svg class="w-8 h-8 organic-feature-icon" viewBox="0 0 100 100" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <!-- Organic Quality Diamond -->
                            <path d="M50 8.3C51.1 8.3 52.1 8.9 52.5 9.8L65.8 38.2C66.1 38.8 66.1 39.5 65.8 40.1L52.5 68.5C52.1 69.4 51.1 70.0 50 70.0C48.9 70.0 47.9 69.4 47.5 68.5L34.2 40.1C33.9 39.5 33.9 38.8 34.2 38.2L47.5 9.8C47.9 8.9 48.9 8.3 50 8.3Z" fill="white"/>
                            <!-- Flowing Sparkles -->
                            <circle cx="30" cy="25" r="3.2" fill="white" opacity="0.8"/>
                            <circle cx="75" cy="28" r="2.5" fill="white" opacity="0.7"/>
                            <circle cx="82" cy="52" r="2.8" fill="white" opacity="0.9"/>
                            <circle cx="25" cy="65" r="2.2" fill="white" opacity="0.6"/>
                            <circle cx="70" cy="78" r="3.5" fill="white" opacity="0.8"/>
                            <!-- Inner Flowing Lines -->
                            <path d="M44.2 25.6C44.2 24.4 45.2 23.4 46.4 23.4H53.6C54.8 23.4 55.8 24.4 55.8 25.6C55.8 26.8 54.8 27.8 53.6 27.8H46.4C45.2 27.8 44.2 26.8 44.2 25.6Z" fill="url(#qualityGradient)" opacity="0.7"/>
                            <path d="M42.5 39.2C42.5 38.0 43.5 37.0 44.7 37.0H55.3C56.5 37.0 57.5 38.0 57.5 39.2C57.5 40.4 56.5 41.4 55.3 41.4H44.7C43.5 41.4 42.5 40.4 42.5 39.2Z" fill="url(#qualityGradient)" opacity="0.8"/>
                            <path d="M44.2 52.8C44.2 51.6 45.2 50.6 46.4 50.6H53.6C54.8 50.6 55.8 51.6 55.8 52.8C55.8 54.0 54.8 55.0 53.6 55.0H46.4C45.2 55.0 44.2 54.0 44.2 52.8Z" fill="url(#qualityGradient)" opacity="0.6"/>
                            
                            <defs>
                                <linearGradient id="qualityGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                                    <stop offset="0%" style="stop-color:#5856d6;stop-opacity:1" />
                                    <stop offset="100%" style="stop-color:#3634a3;stop-opacity:1" />
                                </linearGradient>
                            </defs>
                        </svg>
                    </div>
                    <h3 class="feature-title">Premium Quality</h3>
                    <p class="text-base">Access all available resolutions up to 4K. Our advanced YouTube thumbnail grabber 4K technology ensures you get the highest quality images available from any video.</p>
                </div>
            </div>
            
        </div>
    </section>

    <!-- Professional Use Cases Section -->
    <section class="py-5xl section-bg-secondary">
        <div class="container">
            
            <!-- Section Header -->
            <div class="text-center mb-4xl animate-on-scroll" data-animate="fade-up">
                <h2 class="section-title">Trusted by Content Creators Worldwide</h2>
                <p class="section-subtitle">
                    From independent bloggers to major publications, our YouTube thumbnail grabber 
                    is the preferred choice for extracting high-quality video thumbnails.
                </p>
            </div>
            
            <!-- Use Cases Grid -->
            <div class="grid grid-1 sm-grid-2 lg-grid-3 max-w-5xl mx-auto gap-2xl">
                
                <div class="card p-xl animate-on-scroll" data-animate="slide-left">
                    <div class="space-y-lg">
                        <div class="w-12 h-12 rounded-2xl flex items-center justify-center feature-icon usecase-content performance-optimized">
                            <svg class="w-6 h-6 organic-feature-icon" fill="white" viewBox="0 0 24 24">
                                <path d="M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z"/>
                            </svg>
                        </div>
                        <h3 class="feature-title">Content Creators & Bloggers</h3>
                        <p class="text-base">
                            Popular sites like Boing Boing use our YouTube thumbnail grabber for their video content curation. 
                            Perfect for blog posts, articles, and social media content where high-quality visuals matter.
                        </p>
                    </div>
                </div>
                
                <div class="card p-xl animate-on-scroll" data-animate="fade-up" style="animation-delay: 0.2s;">
                    <div class="space-y-lg">
                        <div class="w-12 h-12 rounded-2xl flex items-center justify-center feature-icon usecase-marketing performance-optimized">
                            <svg class="w-6 h-6 organic-feature-icon" fill="white" viewBox="0 0 24 24">
                                <path d="M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm-1 16H9V7h9v14z"/>
                            </svg>
                        </div>
                        <h3 class="feature-title">Marketing Professionals</h3>
                        <p class="text-base">
                            Marketing teams prefer our tool over YouTube thumbnail grabber extension options 
                            because it works instantly without software installation, perfect for team collaboration.
                        </p>
                    </div>
                </div>
                
                <div class="card p-xl animate-on-scroll" data-animate="slide-right" style="animation-delay: 0.4s;">
                    <div class="space-y-lg">
                        <div class="w-12 h-12 rounded-2xl flex items-center justify-center feature-icon usecase-media performance-optimized">
                            <svg class="w-6 h-6 organic-feature-icon" fill="white" viewBox="0 0 24 24">
                                <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
                            </svg>
                        </div>
                        <h3 class="feature-title">Media & Publishers</h3>
                        <p class="text-base">
                            News outlets and publishers rely on our boing boing YouTube thumbnail grabber capabilities 
                            for quick thumbnail extraction when covering viral videos and trending content.
                        </p>
                    </div>
                </div>
                
            </div>
            
        </div>
    </section>

    <!-- FAQ Section -->
    <section class="py-5xl section-bg-primary">
        <div class="container">
            
            <div class="text-center mb-4xl animate-on-scroll" data-animate="fade-up">
                <h2 class="section-title">Frequently Asked Questions</h2>
                <p class="section-subtitle">
                    Everything you need to know about our YouTube thumbnail grabber tool
                </p>
            </div>
            
            <div class="max-w-3xl mx-auto space-y-xl">
                
                <div class="card p-xl animate-on-scroll" data-animate="fade-up">
                    <h3 class="feature-title mb-md">What makes this YouTube thumbnail grabber different from browser extensions?</h3>
                    <p class="text-base">
                        Unlike YouTube thumbnail grabber extension tools that require installation and permissions, 
                        our web-based solution works instantly in any browser. No downloads, no security concerns, 
                        and no compatibility issues across different devices.
                    </p>
                </div>
                
                <div class="card p-xl animate-on-scroll" data-animate="fade-up" style="animation-delay: 0.1s;">
                    <h3 class="feature-title mb-md">Can I extract 4K quality thumbnails?</h3>
                    <p class="text-base">
                        Yes! Our YouTube thumbnail grabber 4K tool automatically detects and provides access to 
                        the highest resolution thumbnail available for each video, including Ultra HD (4K) when available.
                    </p>
                </div>
                
                <div class="card p-xl animate-on-scroll" data-animate="fade-up" style="animation-delay: 0.2s;">
                    <h3 class="feature-title mb-md">Is this tool suitable for professional use?</h3>
                    <p class="text-base">
                        Absolutely! Our YouTube thumbnail grabber HD tool is trusted by content creators, 
                        publishers, and marketing professionals worldwide for high-quality thumbnail extraction 
                        in commercial projects and editorial content.
                    </p>
                </div>
                
            </div>
            
        </div>
    </section>

    <!-- Enhanced Notification System -->
    <div 
        x-data="{ 
            notifications: [],
            add(message) {
                const notification = {
                    id: Date.now(),
                    message
                };
                this.notifications.push(notification);
                setTimeout(() => {
                    this.notifications = this.notifications.filter(n => n.id !== notification.id);
                }, 4000);
            }
        }"
        @notify.window="add($event.detail.message)"
        class="fixed top-6 right-6 z-50 space-y-md max-w-sm"
    >
        <template x-for="notification in notifications" x-bind:key="notification.id">
            <div 
                class="notification flex items-center gap-lg"
                x-transition:enter="transition ease-out duration-300"
                x-transition:enter-start="opacity-0 transform translate-x-full"
                x-transition:enter-end="opacity-1 transform translate-x-0"
                x-transition:leave="transition ease-in duration-200"
                x-transition:leave-start="opacity-1 transform translate-x-0"
                x-transition:leave-end="opacity-0 transform translate-x-full"
            >
                <div class="notification-icon">
                    <Lucideicons.check class="w-6 h-6 text-white" />
                </div>
                <div class="flex-1">
                    <p class="font-semibold text-gray-850 mb-2xs" x-text="notification.message"></p>
                    <p class="text-sm text-gray-650">Successfully completed</p>
                </div>
            </div>
        </template>
    </div>
</div>


