defmodule MonorepoWeb.Affiliate.ProductSubmitLive do
  use MonorepoWeb, :live_view

  require Ash.Query


  def mount(_params, _session, socket) do
    current_user = socket.assigns.current_user

    form = resource_form(current_user)
    socket =
      assign(socket, form: form, step: 1)
      |> allow_upload(:media, accept: ~w(.jpg .jpeg .png .gif), max_entries: 12)

    categories = get_term_taxonomy("countries", current_user)
    industries = get_term_taxonomy("industries", current_user)

    {:ok, socket, temporary_assigns: [categories: categories, industries: industries], layout: false}
  end

  def handle_event("next-step", _, socket) do
    socket = assign(socket, :step, socket.assigns.step + 1)
    {:noreply, socket}
  end

  def handle_event("partial_update", %{"_target" => ["user_meta", i, _], "user_meta" => user_meta}, socket) do
    updated_user_meta =  user_meta[i]
    meta_key = String.to_atom(updated_user_meta["meta_key"])
    meta_value = updated_user_meta["meta_value"]

    old_meta_value = Monorepo.Accounts.Helper.load_meta_value_by_meta_key(socket.assigns.current_user, meta_key)

    socket =
      if old_meta_value != meta_value do
        new_user_meta_party = [%{meta_key: meta_key, meta_value: meta_value}]
        changeset = Ash.Changeset.new(socket.assigns.current_user)
        result = Ash.update(changeset, %{user_meta: new_user_meta_party}, action: :update_user_meta, context: %{private: %{ash_authentication?: true}})
        case result do
          {:ok, new_current_user} ->
            put_flash(socket, :info, "Your information has been updated.")
            |> assign(:current_user, new_current_user)
          {:error, _} -> put_flash(socket, :error, "Your information update failed, please try again later")
        end
      else
        socket
      end

    {:noreply, socket}
  end

  defp resource_form(id \\ nil, current_user) do
    data =
      if is_nil(id) do
        AshPhoenix.Form.for_create(Monorepo.Contents.Post, :create_post, [
          forms: [
            auto?: true
          ]
        ])
      else
        post =
          Ash.Query.filter(Monorepo.Contents.Post, id == ^id and auth author_id == current_user.id)
          |> Ash.read_first!(actor: current_user)

        AshPhoenix.Form.for_update(post, :create_post, [
          forms: [
            auto?: true
          ],
          data: post
        ])
      end
    to_form(data)
  end

  #terms  slug
  defp get_term_taxonomy(slug, current_user) do
    Ash.Query.filter(Monorepo.Terms.TermTaxonomy, parent.slug == ^slug)
    |> Ash.Query.load([:term])
    |> Ash.read!(actor: current_user)
  end

  def render(assigns) do
  ~H"""
  <button class="btn" phx-click={JS.dispatch("phx:show-modal", detail: %{el: "#submit_modal"})}>open modal</button>
  <dialog id="submit_modal" class="modal">
    <div class="modal-box p-0 relative">
      <div class="px-6 py-4 border-b absolute top-0 w-full">Create Service</div>
      <.form id="service-form" :let={f} for={@form} class="h-[calc(60vh)] my-16 overflow-y-scroll space-y-2 px-6">
        <!--Start title-->
        <label class="form-control w-full">
          <div class="label">
            <span class="label-text font-medium">Product or Service Title</span>
          </div>
          <input
            type="text"
            id={f[:title].id}
            name={f[:title].name}
            value={f[:title].value}
            autocomplete="off"
            class="input input-bordered w-full"
          />
          <div class="label">
            <span id={"#{f[:title].id}-helper"} class="label-text-alt text-gray-500">Product or Service Title must be more than 10 words long.</span>
            <span id={"#{f[:title].id}-error"}  class="label-text-alt text-red-500 hidden"></span>
          </div>
        </label>
        <!--End title-->
        <!--Start Commission-->
        <div class="flex gap-2">
          <label class="form-control">
            <div class="label">
              <span class="label-text font-medium">Commission</span>
            </div>
            <div class="flex gap-1 items-center">
            <input type="text" class="input input-bordered input-sm w-full" placeholder="min"/>
            <span class="text-gray-500">-</span>
            <input type="text" class="input input-bordered input-sm w-full" placeholder="max"/>
            </div>
            <div class="label">
              <span class="label-text-alt text-gray-500"></span>
            </div>
          </label>
          <label class="form-control w-1/3">
            <div class="label">
              <span class="label-text font-medium">&nbsp;</span>
            </div>
            <select class="select select-sm select-bordered">
              <option>%</option>
              <option value="USD">$ (USD - US Dollar)</option>
              <option value="EUR">€ (EUR - Euro)</option>
              <option value="GBP">£ (GBP - British Pound)</option>
              <option value="JPY">¥ (JPY - Japanese Yen)</option>
              <option value="CNY">¥ (CNY - Chinese Yuan)</option>
              <option value="CHF">CHF (CHF - Swiss Franc)</option>
              <option value="CAD">$ (CAD - Canadian Dollar)</option>
              <option value="AUD">$ (AUD - Australian Dollar)</option>
              <option value="INR">₹ (INR - Indian Rupee)</option>
              <option value="KRW">₩ (KRW - South Korean Won)</option>
              <option value="RUB">₽ (RUB - Russian Ruble)</option>
              <option value="TWD">NT$ (TWD - New Taiwan Dollar)</option>
              <option value="MXN">$ (MXN - Mexican Peso)</option>
              <option value="SGD">$ (SGD - Singapore Dollar)</option>
              <option value="BRL">R$ (BRL - Brazilian Real)</option>
              <option value="MYR">RM (MYR - Malaysian Ringgit)</option>
              <option value="THB">฿ (THB - Thai Baht)</option>
              <option value="ZAR">R (ZAR - South African Rand)</option>
            </select>
            <div class="label">
              <span class="label-text-alt text-gray-500"></span>
            </div>
          </label>
          <label class="form-control w-1/4">
            <div class="label">
              <span class="label-text font-medium">&nbsp;</span>
            </div>
            <select class="select select-sm select-bordered">
              <option>CPC</option>
              <option>CPS</option>
              <option>CPL</option>
              <option>CPI</option>
              <option>Recurring</option>
            </select>
            <div class="label">
              <span class="label-text-alt text-gray-500"></span>
            </div>
          </label>
        </div>
        <!--End Commission-->
        <!--Start Description-->
        <label class="form-control w-full">
            <div class="label">
              <span class="label-text font-medium">Description</span>
            </div>
            <textarea
              id={f[:post_content].id}
              type="text"
              name={f[:post_content].name}
              placeholder="Description(text or markdown)"
              rows="5"
              class="textarea textarea-bordered resize-none w-full"
              phx-debounce="50"
              phx-change={
                JS.dispatch("app:count_word")
                |> JS.dispatch("app:fill_text_with_attribute", detail: %{to_el: "#count_word_text", from_attr: "data-count-word"})
              }
              data-validator="length"
              data-validator-params="20,3000"
              data-target-btn="#next-btn"
              data-target-els={"##{f[:title].id},##{f[:post_content].id}"}
            >{f[:title].value}</textarea>
            <div class="label">
              <span class="label-text-alt text-red-500 hidden" id={"#{f[:post_content].id}-error"}></span>
              <span class="label-text-alt text-gray-500" id={"#{f[:post_content].id}-helper"}></span>
              <span class="label-text-alt text-gray-500"><span id="count_word_text">0</span>/3000</span>
            </div>
          </label>
        <!--End Description-->
        <!--Start Country-->
        <label class="form-control w-full">
          <div class="label">
            <span class="label-text font-medium">Select a country where your service(product) from?</span>
          </div>
          <select
            id={"#{f[:categories].id}_0_term_taxonomy"}
            class="select select-sm select-bordered"
            name={"#{f[:categories].id}[0][term_taxonomy_id]"}
          >
            <option :for={category <- @categories}>{category.term.name}</option>
          </select>
          <div class="label">
            <span id={"#{f[:categories].id}_0_term_taxonomy-helper"} class="label-text-alt text-gray-500"></span>
            <span id={"#{f[:categories].id}_0_term_taxonomy-error"}  class="label-text-alt text-red-500 hidden"></span>
          </div>
        </label>
        <!--End Country-->
        <!--Start industry-->
        <label class="form-control w-full">
            <div class="label">
              <span class="label-text font-medium">What industry is your service(product) in?</span>
            </div>
            <select class="select select-sm select-bordered" name={"#{f[:categories].id}[1][term_taxonomy_id]"}>
              <option :for={industry <- @industries}>{industry.term.name}</option>
            </select>
            <div class="label">
              <span id={"#{f[:categories].id}_1_term_taxonomy_id-error"}  class="label-text-alt text-red-500 hidden"></span>
            </div>
          </label>
        <!--End industry-->
        <!--Start Link-->
        <label>
          <div class="label"><span class="label-text font-medium">What is the link to your service(product)?</span></div>
            <input
            type="text"
            id={"#{f[:post_meta].id}_0_meta_value"}
            name={"#{f[:post_meta].name}[0][meta_value]"}
            autocomplete="off"
            class="input input-bordered input-sm w-full"
          />
          <div class="label">
            <span id={"#{f[:post_meta].id}_0_meta_value-helper"} class="label-text-alt text-gray-500">The link of your service(product).</span>
            <span id={"#{f[:post_meta].id}_0_meta_value-error"}  class="label-text-alt text-red-500 hidden"></span>
          </div>
        </label>
        <!--End Link-->
        <!--Start media-->
        <div>
          <div class="font-medium text-sm mb-2">Upload media</div>
          <div class="grid grid-cols-3 gap-2">
            <div :for={_ <- 0..8} class="bg-base-300 aspect-video rounded-sm hover:opacity-50"></div>
          </div>
        </div>
        <!--End media-->
      </.form>
      <div class="border-t flex justify-end px-6 py-4 absolute bottom-0 w-full bg-white">
          <button id="next-btn" type="button" class="btn btn-sm  btn-diabled" disabled>Submit</button>
      </div>
    </div>
    <form method="dialog" class="modal-backdrop">
      <button>close</button>
    </form>
  </dialog>
  """
  end
end
