name: Build and Push Docker Images

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: macos-latest # 这是 ARM64 runner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # --- 新增：在 macOS (ARM64) 上设置 Docker ---
      # 仍然需要这个步骤来确保 Docker Daemon 运行并可用
      - name: Setup Docker on macOS
        uses: docker-practice/actions-setup-docker@v1
        with:
          docker-version: 'latest'
          channel: 'stable'

      - name: Verify Docker installation
        run: |
          docker --version
          docker info

      # --- 移除 Set up QEMU ---
      # 因为 macos-latest runner 已经是 ARM64，
      # 构构建 linux/arm64 镜像时不再需要 QEMU 模拟。

      - name: Set up Docker Buildx # 仍然保留 Buildx，它提供更好的构建体验和缓存
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cache Docker layers for arm64 # 缓存仍然针对 arm64 平台
        id: cache-arm64
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache-arm64
          key: ${{ runner.os }}-docker-arm64-${{ hashFiles('Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-docker-arm64-

      - name: Build and Push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/arm64 # 明确指定构建 linux/arm64，这将利用原生 ARM64 环境
          push: ${{ github.event_name == 'push' }}
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/moly:${{ github.ref_name }}
          cache-from: |
            type=local,src=/tmp/.buildx-cache-arm64
          cache-to: |
            type=local,dest=/tmp/.buildx-cache-arm64,mode=max,platform=linux/arm64